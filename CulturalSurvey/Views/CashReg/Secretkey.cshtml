
@{
    ViewBag.Title = "Secretkey";
    Layout = "~/Views/Shared/_ResponsePage.cshtml";
}



<div class="container mt-5">
    <div class="row">
        <div class="col-12">
            <div><h1 class="display-4 text-center" id="timer">00:00:00</h1></div>
        </div>
    </div>
</div>

<div class="container mt-3">
    <div class="row">
        <div class="col-12 text-center">
            <button class="btn btn-primary mx-2" id="startBtn">Start</button>
            <button class="btn btn-danger mx-2" id="stopBtn">Stop</button>
        </div>
    </div>
</div>

@*Incriment timer*@

@*<script>

        let timerInterval;
        let startTime;
        const targetTime = 1 * 60 * 1000;


        function updateTimerDisplay(ms) {
            const hours = Math.floor(ms / 3600000);
            const minutes = Math.floor((ms % 3600000) / 60000);
            const seconds = Math.floor((ms % 60000) / 1000);

            const hoursStr = hours.toString().padStart(2, '0');
            const minutesStr = minutes.toString().padStart(2, '0');
            const secondsStr = seconds.toString().padStart(2, '0');

            document.getElementById('timer').textContent = `${hoursStr}:${minutesStr}:${secondsStr}`;
        }


        function startTimer() {
            startTime = Date.now();
            timerInterval = setInterval(() => {
                const currentTime = Date.now();
                const elapsedTime = currentTime - startTime;


                if (elapsedTime >= targetTime) {
                    stopTimer();
                    return;
                }

                updateTimerDisplay(elapsedTime);
            }, 1000);
        }


        function stopTimer() {
            clearInterval(timerInterval);
        }


        document.getElementById('startBtn').addEventListener('click', () => {
            updateTimerDisplay(0);
            startTimer();
        });


        document.getElementById('stopBtn').addEventListener('click', () => {
            stopTimer();

        });


    </script>*@


@*Decreament timer*@

@*<script>
        let timerInterval;
        let startTime;
        const targetTime = 30 * 60 * 1000;

        function updateTimerDisplay(ms) {
            const remainingTime = targetTime - ms;
            const hours = Math.floor(remainingTime / 3600000);
            const minutes = Math.floor((remainingTime % 3600000) / 60000);
            const seconds = Math.floor((remainingTime % 60000) / 1000);

            const hoursStr = hours.toString().padStart(2, '0');
            const minutesStr = minutes.toString().padStart(2, '0');
            const secondsStr = seconds.toString().padStart(2, '0');

            localStorage.setItem("Timer", `${hoursStr}:${minutesStr}:${secondsStr}`);
            // Retrieve
            document.getElementById("timer").innerHTML = localStorage.getItem("Timer");


            /*document.getElementById('timer').textContent = `${hoursStr}:${minutesStr}:${secondsStr}`;*/
        }

        function startTimer() {
            startTime = Date.now();
            updateTimerDisplay(0); // Update display with initial time (00:00:00)
            timerInterval = setInterval(() => {
                const currentTime = Date.now();
                const elapsedTime = currentTime - startTime;

                if (elapsedTime >= targetTime) {
                    stopTimer();
                    return;
                }

                updateTimerDisplay(elapsedTime);
            }, 1000);
        }

        function stopTimer() {
            clearInterval(timerInterval);
        }

        document.getElementById('startBtn').addEventListener('click', () => {
            startTimer();
        });

        document.getElementById('stopBtn').addEventListener('click', () => {
            stopTimer();
        });

    </script>*@



@*Timer run locally till click stop button or complete the remaining time*@

<script>
     //$(document).ready(function () {
    //    localStorage.removeItem('timerStartTime');
    //    localStorage.removeItem('remainingTime');
    //});

    const timerElement = document.getElementById('timer');
    const startButton = document.getElementById('startBtn');
    const stopButton = document.getElementById('stopBtn');

    let timerInterval;
    let startTime = parseInt(localStorage.getItem('timerStartTime'));
    let remainingTime = parseInt(localStorage.getItem('remainingTime'));
    const targetTime = 1 * 60 * 1000; // 30 minutes

    function updateTimerDisplay() {
        if (!startTime || remainingTime <= 0) {
            stopTimer();
            if (remainingTime <= 0) {
                /*alert("Time Out!");*/
                success("Time Out", "topCenter");
            }
            return;
        }

        const currentTime = Date.now();
        remainingTime = Math.max(targetTime - (currentTime - startTime), 0);

        const hours = Math.floor(remainingTime / 3600000);
        const minutes = Math.floor((remainingTime % 3600000) / 60000);
        const seconds = Math.floor((remainingTime % 60000) / 1000);

        const hoursStr = hours.toString().padStart(2, '0');
        const minutesStr = minutes.toString().padStart(2, '0');
        const secondsStr = seconds.toString().padStart(2, '0');

        timerElement.textContent = `${hoursStr}:${minutesStr}:${secondsStr}`;

        localStorage.setItem('remainingTime', remainingTime);
    }

    function startTimer() {
        if (!startTime || remainingTime <= 0) {
            startTime = Date.now();
            remainingTime = targetTime;
            localStorage.setItem('timerStartTime', startTime);
            localStorage.setItem('remainingTime', remainingTime);
        }

        if (!timerInterval) {
            timerInterval = setInterval(() => {
                updateTimerDisplay();
            }, 1000);
        }
    }

    function stopTimer() {
        if (timerInterval) {
            localStorage.removeItem('timerStartTime');
            localStorage.removeItem('remainingTime');

            startTime = null;
            remainingTime = 0;

            clearInterval(timerInterval);
            timerInterval = null;
            updateTimerDisplay();
        }
    }

    startButton.addEventListener('click', () => {
        if (startTime && remainingTime > 0) {
            stopTimer();
        } else {
            startTimer();
        }
    });

    stopButton.addEventListener('click', () => {
        stopTimer();
        /*alert("Timer Stopped!")*/
    });

    if (startTime && remainingTime > 0) {
        startTimer();
    }

</script>
